name: Install Rust
description: Install Rust
inputs:
  architecture:
    required: true
    type: string
  al_version:
    required: true
    type: string
runs:
  using: composite
  steps:
    - run: git apply "${GITHUB_WORKSPACE}/assets/patches/rust/dont-use-sysroot.patch"
      shell: bash
      working-directory: /home/runner/src
    - run: git apply "${GITHUB_WORKSPACE}/assets/patches/rust/bindgen-without-sysroot.patch"
      shell: bash
      working-directory: /home/runner/src
    - run: git apply "${GITHUB_WORKSPACE}/assets/patches/rust/patch-build-process-arm64-al2023.patch"
      shell: bash
      working-directory: /home/runner/src
      if: ${{ inputs.architecture == 'arm64' }}
    - run: git apply "${GITHUB_WORKSPACE}/assets/patches/rust/patch-build-process-x86.patch"
      shell: bash
      working-directory: /home/runner/src
      if: ${{ inputs.architecture == 'x86' }}      
    - run: git apply "${GITHUB_WORKSPACE}/assets/patches/rust/use-aarch64.patch"
      shell: bash
      working-directory: /home/runner/src
      if: ${{ inputs.architecture == 'arm64' }}
    - run: git apply "${GITHUB_WORKSPACE}/assets/patches/rust/use-system-openssl.patch"
      shell: bash
      working-directory: /home/runner/src
    - run: git apply "${GITHUB_WORKSPACE}/assets/patches/rust/configure-clang-build.patch"
      shell: bash
      working-directory: /home/runner/src
    - run: |
        git config --global user.email "support@chromiumforlambda.org"
        git config --global user.name "Chromium for Lambda"
      shell: bash
    - run: ./tools/rust/build_rust.py --skip-test
      shell: bash
      working-directory: /home/runner/src
    - run: ./tools/rust/build_bindgen.py
      shell: bash
      working-directory: /home/runner/src
